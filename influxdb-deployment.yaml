# Namespace

apiVersion: v1
kind: Namespace
metadata:
  name: influxdb-ns
---


# Storage Class

kind: StorageClass
apiVersion: storage.k8s.io/v1

metadata:
  labels:
    app: influxdb
  name: influxdb-sc
  namespace: influxdb-ns

provisioner: k8s.io/minikube-hostpath
volumeBindingMode: Immediate

parameters:
 type: gp2 # This configures SSDs

allowVolumeExpansion: true
reclaimPolicy: Retain
---


# PV

apiVersion: v1
kind: PersistentVolume

metadata:
  labels:
    app: influxdb
  name: influxdb-pv
  namespace: influxdb-ns
  labels:
    type: local

spec:
  storageClassName: influxdb-sc
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/home/kube/influxdb-files/volume-files"
---


#Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  generation: 1
  labels:
    app: influxdb
  name: influxdb
  namespace: influxdb-ns
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: influxdb
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: influxdb
    spec:
      containers:
#      - env:
#           - name: INFLUXDB_ADMIN_USER_PASSWORD
#             value: <Password> #you can give anything here.
#           - name: INFLUXDB_ADMIN_USER_TOKEN
#             value: your-token  # you must have a token given by influxdb after purchasing or signing up.
      - image: influxdb:2.3.0-alpine
        imagePullPolicy: Always
        name: influxdb
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/influxdb
          name: var-lib-influxdb
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: var-lib-influxdb
        persistentVolumeClaim:
          claimName: influxdb-pvc
---


# PVC

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: influxdb
  name: influxdb-pvc
  namespace: influxdb-ns
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: influxdb-sc
  resources:
    requests:
      storage: 2Gi
---


# Service

apiVersion: v1
kind: Service
metadata:
  name: influxdb
  namespace: influxdb-ns
  labels:
    app: influxdb
spec:
  selector:
    app: influxdb
  type: NodePort
  ports:
    - protocol: TCP
      port: 8086
      targetPort: 8086
      nodePort: 30015
---
   
